#!/bin/bash

if [ -z "$1" ]
then
  echo "Usage: $0 date"
  exit 1
fi
filename="log_files/$1.tsv"

if [ ! -f "$filename" ]
then
  echo "Downloading log file..."
  ./client $1
  echo "Log file downloaded."
fi

echo "Generating report."

# TODO Handle bad requests (code=XX)
raw_file=$(cat $filename | ag 'heroku/router' --nocolor | ag -v 'code=')
base_lines=$(echo "$raw_file" | awk -F $'\t' '{ print $10}')

# TODO Handle entries with NF != 11
echo "$base_lines" | gawk 'NF == 11 \
  {
    match($0, /status=([0-9]+)/, status)
    status_code = status[1]
    match($0, /path="([^\?"]+)/, path_matched)
    path = path_matched[1]

    if(status_code == 500) {
      STATUS_500[path]++
    }

    if(path !~ /assets|favicon/) {
      REQS[path]++
    }

    TOTAL++
    STATUS_CODES[status_code]++
  }
  END {
    printf("%s: %d\n\n", "Total requests", TOTAL)

    printf("%s\n","***REMOVED*** " )
    for(x in STATUS_CODES) {
      percentage = STATUS_CODES[x] / TOTAL * 100
      printf("%s: %d (%.2f%)\n", x, STATUS_CODES[x], percentage)
    }

    # Sort arrays by values descending
    PROCINFO["sorted_in"] = "@val_num_desc"

    printf("\n%s\n","***REMOVED***" )
    i = 1; for(k in STATUS_500) {
      print STATUS_500[k] ": " k

      i++; if ( i == 10 ) { break }
    }

    printf("\n%s\n","***REMOVED***" )
    i = 1; for(k in REQS) {
      print REQS[k] ": " k

      i++; if ( i == 20 ) { break }
    }
  }'

# TODO
# Top IPs
# Top assets requests
# How to use this shit
